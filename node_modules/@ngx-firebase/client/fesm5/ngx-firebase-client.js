import { __decorate, __param } from 'tslib';
import { Inject, ɵɵdefineInjectable, ɵɵinject, Injectable, NgModule } from '@angular/core';
import * as firebase from 'firebase/app';
import { apps, initializeApp } from 'firebase/app';
import 'firebase/firestore';
import 'firebase/auth';
import 'firebase/storage';
import { CommonModule } from '@angular/common';

var NgxFirebaseClientService = /** @class */ (function () {
    function NgxFirebaseClientService(firebaseConfig) {
        this.firebaseConfig = firebaseConfig;
    }
    Object.defineProperty(NgxFirebaseClientService.prototype, "firebase", {
        get: function () {
            if (!apps.length) {
                initializeApp(this.firebaseConfig);
            }
            return firebase;
        },
        enumerable: true,
        configurable: true
    });
    NgxFirebaseClientService.prototype.auth = function () {
        return this.firebase.auth();
    };
    NgxFirebaseClientService.prototype.storage = function () {
        return this.firebase.storage();
    };
    NgxFirebaseClientService.prototype.firestore = function () {
        return this.firebase.firestore();
    };
    NgxFirebaseClientService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: ['firebaseConfig',] }] }
    ]; };
    NgxFirebaseClientService.ɵprov = ɵɵdefineInjectable({ factory: function NgxFirebaseClientService_Factory() { return new NgxFirebaseClientService(ɵɵinject("firebaseConfig")); }, token: NgxFirebaseClientService, providedIn: "root" });
    NgxFirebaseClientService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __param(0, Inject('firebaseConfig'))
    ], NgxFirebaseClientService);
    return NgxFirebaseClientService;
}());

var NgxFirebaseClientModule = /** @class */ (function () {
    function NgxFirebaseClientModule() {
    }
    NgxFirebaseClientModule_1 = NgxFirebaseClientModule;
    NgxFirebaseClientModule.forRoot = function (firebaseConfig) {
        return {
            ngModule: NgxFirebaseClientModule_1,
            providers: [
                NgxFirebaseClientService,
                {
                    provide: 'firebaseConfig',
                    useValue: firebaseConfig
                }
            ]
        };
    };
    var NgxFirebaseClientModule_1;
    NgxFirebaseClientModule = NgxFirebaseClientModule_1 = __decorate([
        NgModule({
            declarations: [],
            imports: [
                CommonModule
            ],
        })
    ], NgxFirebaseClientModule);
    return NgxFirebaseClientModule;
}());

/*
 * Public API Surface of client
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgxFirebaseClientModule, NgxFirebaseClientService };
//# sourceMappingURL=ngx-firebase-client.js.map
