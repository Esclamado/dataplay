import { __decorate, __param } from "tslib";
import { Inject, Injectable } from '@angular/core';
import * as firebase from 'firebase/app';
// todo setup dynamic imports
import 'firebase/firestore';
import 'firebase/auth';
import 'firebase/storage';
import * as i0 from "@angular/core";
let NgxFirebaseClientService = class NgxFirebaseClientService {
    constructor(firebaseConfig) {
        this.firebaseConfig = firebaseConfig;
    }
    get firebase() {
        if (!firebase.apps.length) {
            firebase.initializeApp(this.firebaseConfig);
        }
        return firebase;
    }
    auth() {
        return this.firebase.auth();
    }
    storage() {
        return this.firebase.storage();
    }
    firestore() {
        return this.firebase.firestore();
    }
};
NgxFirebaseClientService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: ['firebaseConfig',] }] }
];
NgxFirebaseClientService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgxFirebaseClientService_Factory() { return new NgxFirebaseClientService(i0.ɵɵinject("firebaseConfig")); }, token: NgxFirebaseClientService, providedIn: "root" });
NgxFirebaseClientService = __decorate([
    Injectable({
        providedIn: 'root'
    }),
    __param(0, Inject('firebaseConfig'))
], NgxFirebaseClientService);
export { NgxFirebaseClientService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWZpcmViYXNlL2NsaWVudC8iLCJzb3VyY2VzIjpbImxpYi9jbGllbnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxLQUFLLFFBQVEsTUFBTSxjQUFjLENBQUM7QUFFekMsNkJBQTZCO0FBQzdCLE9BQU8sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxlQUFlLENBQUM7QUFDdkIsT0FBTyxrQkFBa0IsQ0FBQzs7QUFLMUIsSUFBYSx3QkFBd0IsR0FBckMsTUFBYSx3QkFBd0I7SUFPbkMsWUFBOEMsY0FBbUI7UUFBbkIsbUJBQWMsR0FBZCxjQUFjLENBQUs7SUFDakUsQ0FBQztJQVBELElBQUksUUFBUTtRQUNWLElBQUksQ0FBRSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUMxQixRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUM3QztRQUNELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUFJRCxJQUFJO1FBQ0YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFRCxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25DLENBQUM7Q0FDRixDQUFBOzs0Q0FkYyxNQUFNLFNBQUMsZ0JBQWdCOzs7QUFQekIsd0JBQXdCO0lBSHBDLFVBQVUsQ0FBQztRQUNWLFVBQVUsRUFBRSxNQUFNO0tBQ25CLENBQUM7SUFRYSxXQUFBLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO0dBUDFCLHdCQUF3QixDQXFCcEM7U0FyQlksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3QsIEluamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UvYXBwJztcblxuLy8gdG9kbyBzZXR1cCBkeW5hbWljIGltcG9ydHNcbmltcG9ydCAnZmlyZWJhc2UvZmlyZXN0b3JlJztcbmltcG9ydCAnZmlyZWJhc2UvYXV0aCc7XG5pbXBvcnQgJ2ZpcmViYXNlL3N0b3JhZ2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hGaXJlYmFzZUNsaWVudFNlcnZpY2Uge1xuICBnZXQgZmlyZWJhc2UoKSB7XG4gICAgaWYgKCEgZmlyZWJhc2UuYXBwcy5sZW5ndGgpIHtcbiAgICAgIGZpcmViYXNlLmluaXRpYWxpemVBcHAodGhpcy5maXJlYmFzZUNvbmZpZyk7XG4gICAgfVxuICAgIHJldHVybiBmaXJlYmFzZTtcbiAgfVxuICBjb25zdHJ1Y3RvcihASW5qZWN0KCdmaXJlYmFzZUNvbmZpZycpIHByaXZhdGUgZmlyZWJhc2VDb25maWc6IGFueSkge1xuICB9XG5cbiAgYXV0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5maXJlYmFzZS5hdXRoKCk7XG4gIH1cblxuICBzdG9yYWdlKCkge1xuICAgIHJldHVybiB0aGlzLmZpcmViYXNlLnN0b3JhZ2UoKTtcbiAgfVxuXG4gIGZpcmVzdG9yZSgpIHtcbiAgICByZXR1cm4gdGhpcy5maXJlYmFzZS5maXJlc3RvcmUoKTtcbiAgfVxufVxuIl19